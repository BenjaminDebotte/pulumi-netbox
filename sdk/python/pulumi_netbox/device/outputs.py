# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetInterfacesFilterResult',
    'GetInterfacesInterfaceResult',
    'GetInterfacesInterfaceTaggedVlanResult',
    'GetInterfacesInterfaceUntaggedVlanResult',
]

@pulumi.output_type
class GetInterfacesFilterResult(dict):
    def __init__(__self__, *,
                 name: str,
                 value: str):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def value(self) -> str:
        return pulumi.get(self, "value")


@pulumi.output_type
class GetInterfacesInterfaceResult(dict):
    def __init__(__self__, *,
                 description: str,
                 device_id: int,
                 enabled: bool,
                 id: int,
                 mac_address: str,
                 mode: Mapping[str, str],
                 mtu: int,
                 name: str,
                 tag_ids: Sequence[int],
                 tagged_vlans: Sequence['outputs.GetInterfacesInterfaceTaggedVlanResult'],
                 untagged_vlans: Sequence['outputs.GetInterfacesInterfaceUntaggedVlanResult']):
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "device_id", device_id)
        pulumi.set(__self__, "enabled", enabled)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "mac_address", mac_address)
        pulumi.set(__self__, "mode", mode)
        pulumi.set(__self__, "mtu", mtu)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "tag_ids", tag_ids)
        pulumi.set(__self__, "tagged_vlans", tagged_vlans)
        pulumi.set(__self__, "untagged_vlans", untagged_vlans)

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="deviceId")
    def device_id(self) -> int:
        return pulumi.get(self, "device_id")

    @property
    @pulumi.getter
    def enabled(self) -> bool:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter
    def id(self) -> int:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> str:
        return pulumi.get(self, "mac_address")

    @property
    @pulumi.getter
    def mode(self) -> Mapping[str, str]:
        return pulumi.get(self, "mode")

    @property
    @pulumi.getter
    def mtu(self) -> int:
        return pulumi.get(self, "mtu")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="tagIds")
    def tag_ids(self) -> Sequence[int]:
        return pulumi.get(self, "tag_ids")

    @property
    @pulumi.getter(name="taggedVlans")
    def tagged_vlans(self) -> Sequence['outputs.GetInterfacesInterfaceTaggedVlanResult']:
        return pulumi.get(self, "tagged_vlans")

    @property
    @pulumi.getter(name="untaggedVlans")
    def untagged_vlans(self) -> Sequence['outputs.GetInterfacesInterfaceUntaggedVlanResult']:
        return pulumi.get(self, "untagged_vlans")


@pulumi.output_type
class GetInterfacesInterfaceTaggedVlanResult(dict):
    def __init__(__self__, *,
                 id: int,
                 name: str,
                 vid: int):
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "vid", vid)

    @property
    @pulumi.getter
    def id(self) -> int:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def vid(self) -> int:
        return pulumi.get(self, "vid")


@pulumi.output_type
class GetInterfacesInterfaceUntaggedVlanResult(dict):
    def __init__(__self__, *,
                 id: int,
                 name: str,
                 vid: int):
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "vid", vid)

    @property
    @pulumi.getter
    def id(self) -> int:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def vid(self) -> int:
        return pulumi.get(self, "vid")


